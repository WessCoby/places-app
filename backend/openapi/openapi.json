
{

  "openapi": "3.0.0",
  "info": {
      "title": "Places API",
      "description": "**API Server** for Places App - an app where users can share places *(with image and coordinates)* with other users",
      "version": "1.0",
      "contact": {
          "name": "WessCoby",
          "url": "https://github.com/wesscoby",
          "email": "cobygiven@gmail.com"
      }
  },
  "tags": [
      {
          "name": "Auth",
          "description": ""
      },
      {
          "name": "Users",
          "description": ""
      },
      {
          "name": "Places",
          "description": ""
      }
  ],
  "servers": [
      {
          "url": "http://localhost:5000/api"
      }
  ],
  "components": {
      "securitySchemes": {
          "bearer": {
              "scheme": "bearer",
              "bearerFormat": "JWT",
              "type": "http"
          }
      },
      "schemas": {
          "UpdateUserDto": {
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string"
                  },
                  "avatar": {
                      "type": "string"
                  }
              }
          },
          "CreateUserDto": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string"
                  },
                  "name": {
                      "type": "string"
                  },
                  "email": {
                      "type": "string"
                  },
                  "avatar": {
                      "type": "string"
                  }
              },
              "required": [
                  "id",
                  "name",
                  "email"
              ]
          },
          "LoginUserDto": {
              "type": "object",
              "properties": {
                  "email": {
                      "type": "string"
                  },
                  "password": {
                      "type": "string"
                  }
              },
              "required": [
                  "email",
                  "password"
              ]
          },
          "UserProfile": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string"
                  },
                  "name": {
                      "type": "string"
                  },
                  "email": {
                      "type": "string"
                  },
                  "avatar": {
                      "type": "string"
                  },
                  "role": {
                      "type": "string",
                      "enum": [
                          "user",
                          "admin"
                      ],
                      "default": "user"
                  }
              },
              "required": [
                  "id",
                  "name",
                  "email",
                  "role"
              ]
          },
          "Coordinates": {
              "type": "object",
              "properties": {
                  "lat": {
                      "type": "number",
                      "description": "Latitude"
                  },
                  "lng": {
                      "type": "number",
                      "description": "Longitude"
                  }
              },
              "required": [
                  "lat",
                  "lng"
              ]
          },
          "CreatePlaceDto": {
              "type": "object",
              "properties": {
                  "title": {
                      "type": "string"
                  },
                  "description": {
                      "type": "string"
                  },
                  "address": {
                      "type": "string"
                  },
                  "coordinates": {
                      "$ref": "#/components/schemas/Coordinates"
                  },
                  "image": {
                      "type": "string"
                  }
              },
              "required": [
                  "title",
                  "description",
                  "address",
                  "coordinates"
              ]
          },
          "User": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string"
                  },
                  "name": {
                      "type": "string"
                  },
                  "email": {
                      "type": "string"
                  },
                  "avatar": {
                      "type": "string"
                  },
                  "role": {
                      "type": "string",
                      "enum": [
                          "user",
                          "admin"
                      ],
                      "default": "user"
                  },
                  "places": {
                      "type": "array",
                      "items": {
                          "type": "array"
                      }
                  },
                  "createdAt": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                  }
              },
              "required": [
                  "id",
                  "name",
                  "email",
                  "role",
                  "places",
                  "createdAt",
                  "updatedAt"
              ]
          },
          "Place": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string"
                  },
                  "title": {
                      "type": "string"
                  },
                  "description": {
                      "type": "string"
                  },
                  "address": {
                      "type": "string"
                  },
                  "coordinates": {
                      "$ref": "#/components/schemas/Coordinates"
                  },
                  "image": {
                      "type": "string"
                  },
                  "createdAt": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "creator": {
                      "$ref": "#/components/schemas/User"
                  }
              },
              "required": [
                  "id",
                  "title",
                  "description",
                  "address",
                  "coordinates",
                  "createdAt",
                  "updatedAt",
                  "creator"
              ]
          },
          "UpdatePlaceDto": {
              "type": "object",
              "properties": {
                  "title": {
                      "type": "string"
                  },
                  "description": {
                      "type": "string"
                  },
                  "image": {
                      "type": "string"
                  }
              }
          }
      }
  },
  "paths": {
      "/users": {
          "get": {
              "operationId": "UserController_getAll",
              "summary": "Retrieve list of all users",
              "parameters": [ ],
              "responses": {
                  "200": {
                      "description": ""
                  }
              },
              "tags": [
                  "Users"
              ]
          }
      },
      "/users/{uid}": {
          "get": {
              "operationId": "UserController_getOne",
              "summary": "Get a specific user by ID",
              "parameters": [
                  {
                      "name": "uid",
                      "required": true,
                      "in": "path",
                      "description": "User ID",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": ""
                  }
              },
              "tags": [
                  "Users"
              ]
          },
          "patch": {
              "operationId": "UserController_update",
              "summary": "Update a specific user by ID",
              "parameters": [
                  {
                      "name": "uid",
                      "required": true,
                      "in": "path",
                      "description": "User ID",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "description": "Data to update",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateUserDto"
                          }
                      }
                  }
              },
              "responses": {
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden resource"
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "bearer": [ ]
                  }
              ]
          },
          "delete": {
              "operationId": "UserController_deleteUser",
              "summary": "",
              "description": "Delete a user from the system [ADMIN]",
              "parameters": [
                  {
                      "name": "uid",
                      "required": true,
                      "in": "path",
                      "description": "User ID",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "204": {
                      "description": "Successful"
                  },
                  "400": {
                      "description": "Bad Request"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden resource"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "bearer": [ ]
                  }
              ]
          }
      },
      "/auth/signup": {
          "post": {
              "operationId": "AuthController_signup",
              "summary": "",
              "description": "New User sign up",
              "parameters": [ ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateUserDto"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": ""
                  }
              },
              "tags": [
                  "Auth"
              ]
          }
      },
      "/auth/login": {
          "post": {
              "operationId": "AuthController_login",
              "summary": "",
              "description": "User login",
              "parameters": [ ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/LoginUserDto"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": ""
                  }
              },
              "tags": [
                  "Auth"
              ]
          }
      },
      "/auth/profile": {
          "get": {
              "operationId": "AuthController_getProfile",
              "summary": "",
              "description": "Get authenticated user profile",
              "parameters": [ ],
              "responses": {
                  "200": {
                      "description": "",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/UserProfile"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden resource"
                  }
              },
              "tags": [
                  "Auth"
              ],
              "security": [
                  {
                      "bearer": [ ]
                  }
              ]
          },
          "patch": {
              "operationId": "AuthController_updateProfile",
              "summary": "",
              "description": "Update authenticated user info [name, avatar]",
              "parameters": [ ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateUserDto"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/UserProfile"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden resource"
                  }
              },
              "tags": [
                  "Auth"
              ],
              "security": [
                  {
                      "bearer": [ ]
                  }
              ]
          }
      },
      "/places": {
          "get": {
              "operationId": "PlacesController_readAll",
              "summary": "Retrieve list of all places",
              "parameters": [ ],
              "responses": {
                  "200": {
                      "description": ""
                  }
              },
              "tags": [
                  "Places"
              ]
          },
          "post": {
              "operationId": "PlacesController_create",
              "summary": "Create a new place",
              "parameters": [ ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreatePlaceDto"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "The record has been successfully created.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Place"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden resource"
                  }
              },
              "tags": [
                  "Places"
              ],
              "security": [
                  {
                      "bearer": [ ]
                  }
              ]
          }
      },
      "/places/{pid}": {
          "get": {
              "operationId": "PlacesController_readOne",
              "summary": "Get a specific place by ID",
              "parameters": [
                  {
                      "name": "pid",
                      "required": true,
                      "in": "path",
                      "description": "Place ID",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": ""
                  }
              },
              "tags": [
                  "Places"
              ]
          },
          "patch": {
              "operationId": "PlacesController_update",
              "summary": "Update a place by ID (only \"creator\" is authorized)",
              "parameters": [
                  {
                      "name": "pid",
                      "required": true,
                      "in": "path",
                      "description": "Place ID",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdatePlaceDto"
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "The record has been successfully updated.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Place"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden resource"
                  }
              },
              "tags": [
                  "Places"
              ],
              "security": [
                  {
                      "bearer": [ ]
                  }
              ]
          },
          "delete": {
              "operationId": "PlacesController_delete",
              "summary": "Delete a place by ID (only an admin or \"creator\" is authorized)",
              "parameters": [
                  {
                      "name": "pid",
                      "required": true,
                      "in": "path",
                      "description": "Place ID",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "204": {
                      "description": "Successful"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden resource"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              },
              "tags": [
                  "Places"
              ],
              "security": [
                  {
                      "bearer": [ ]
                  }
              ]
          }
      },
      "/places/user/{uid}": {
          "get": {
              "operationId": "PlacesController_readPlacesByUser",
              "summary": "Retrieve list of all places by user",
              "parameters": [
                  {
                      "name": "uid",
                      "required": true,
                      "in": "path",
                      "description": "User ID",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": ""
                  }
              },
              "tags": [
                  "Places"
              ]
          }
      }
  }

}
